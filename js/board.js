// Generated by CoffeeScript 1.6.1
var Board;

Board = (function() {

  function Board() {
    this.rows = 6;
    this.currentPlayer = 1;
    this.columns = 6;
    this._createHtml();
    this._createGrid();
  }

  Board.prototype.switchPlayer = function() {
    if (this.currentPlayer === 1) {
      return this.currentPlayer = 2;
    } else {
      return this.currentPlayer = 1;
    }
  };

  Board.prototype._createHtml = function() {
    var c, circle, column, _i, _j, _ref, _ref1, _results,
      _this = this;
    this.html = $("<div class='board' id='board' />");
    _results = [];
    for (c = _i = 1, _ref = this.columns; 1 <= _ref ? _i <= _ref : _i >= _ref; c = 1 <= _ref ? ++_i : --_i) {
      column = $("<div class='column' data-column-num='" + c + "'/>");
      for (_j = 1, _ref1 = this.rows; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; 1 <= _ref1 ? _j++ : _j--) {
        circle = $("<div class='circle' />");
        column.append(circle);
      }
      column.bind('touchstart', function(e) {
        return _this.pick($(e.delegateTarget).data("column-num"));
      });
      _results.push(this.html.append(column));
    }
    return _results;
  };

  Board.prototype._createGrid = function() {
    var _i, _ref, _results;
    this.grid = [];
    _results = [];
    for (_i = 1, _ref = this.columns; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--) {
      _results.push(this.grid.push(this.rows - 1));
    }
    return _results;
  };

  Board.prototype.pick = function(i) {
    this.addPiece(i - 1, this.currentPlayer);
    return this.switchPlayer();
  };

  Board.prototype.addPiece = function(column, player) {
    var row;
    row = this.grid[column];
    this.grid[column]--;
    return this._placePiece(column, row, player);
  };

  Board.prototype._placePiece = function(column, row, player) {
    var left, piece, top;
    piece = $("<div class='piece red' />");
    if (player !== 1) {
      piece = $("<div class='piece yellow' />");
    }
    top = 59 + 104 * row + "px";
    left = 73 + 100 * column + "px";
    piece.css({
      top: top,
      left: left
    });
    return this.html.append(piece);
  };

  return Board;

})();
